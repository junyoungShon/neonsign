<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
<!-- 3.memberVO resultMap -->
   <resultMap type="memberVO" id="memberResultMap">
      <result property="memberEmail" column="MEMBER_EMAIL" />
      <result property="memberNickName" column="MEMBER_NICKNAME" />
      <result property="memberPassword" column="MEMBER_PASSWORD" />
      <result property="memberJoinDate" column="MEMBER_JOIN_DATE" />
      <result property="memberPoint" column="MEMBER_POINT" />
      <result property="memberReportAmount" column="MEMBER_REPORT_AMOUNT" />
      <result property="memberCategory" column="MEMBER_CATEGORY" />
   </resultMap>
	<!-- 한솔 회원가입 -->
	<insert id="memberRegister" parameterType="memberVO">
		insert into
		brain_member(MEMBER_EMAIL,MEMBER_NICKNAME,MEMBER_PASSWORD,MEMBER_JOIN_DATE,MEMBER_CATEGORY)
		values(#{memberEmail},#{memberNickName},#{memberPassword},sysdate,'일반회원')
	</insert>
	<!-- 재영 로그인 -->
		<select id="memberLogin" resultMap="memberResultMap" parameterType="memberVO">
			select * from BRAIN_MEMBER
			where MEMBER_EMAIL=#{memberEmail} and MEMBER_PASSWORD=#{memberPassword}
		</select>

	<!-- 한솔 닉네임 중복체크 -->
	 <select id="findMemberByNickName" resultMap="memberResultMap" parameterType="string">
	 	select MEMBER_NICKNAME from brain_member where MEMBER_NICKNAME=#{value}
	 </select>
	 <!-- 한솔 이메일 중복체크 -->
	 <select id="findMemberByEmail" resultMap="memberResultMap" parameterType="string">
	 	select MEMBER_EMAIL from brain_member where MEMBER_EMAIL=#{value}
	 </select>
	 
	 <!-- 여기부터  -->
	 <!-- 일반회원 목록 -->
    <select id="RegisterMemberList" resultMap="memberResultMap" resultType="memberVO">
    select MEMBER_EMAIL,MEMBER_NICKNAME,MEMBER_JOIN_DATE,
    MEMBER_POINT,MEMBER_REPORT_AMOUNT
		from(
		select rownum,MEMBER_EMAIL,MEMBER_NICKNAME,MEMBER_JOIN_DATE,
		MEMBER_POINT,MEMBER_REPORT_AMOUNT,
 		ceil(rownum/13) as page 
 		from brain_member
 		where MEMBER_CATEGORY ='NORMAL' order by MEMBER_JOIN_DATE desc
 		) 
 		where page=#{value}
    </select>
    <!-- 불량회원 목록 -->
    <select id="blockMemberList" resultMap="memberResultMap" resultType="memberVO">
     select MEMBER_EMAIL,MEMBER_NICKNAME,MEMBER_JOIN_DATE,
    MEMBER_POINT,MEMBER_REPORT_AMOUNT
		from(
		select rownum,MEMBER_EMAIL,MEMBER_NICKNAME,MEMBER_JOIN_DATE,
		MEMBER_POINT,MEMBER_REPORT_AMOUNT,
 		ceil(rownum/13) as page 
 		from brain_member
 		where MEMBER_CATEGORY ='BLACK' order by MEMBER_JOIN_DATE desc
 		) 
 	where page=#{value}
    </select>
    <update id="memberBlock" parameterType="string">
    	update brain_member set MEMBER_CATEGORY='BLACK' where MEMBER_EMAIL=#{value}
    </update>
        <update id="memberBlockRelease" parameterType="string">
    	update brain_member set MEMBER_CATEGORY='NORMAL' where MEMBER_EMAIL=#{value}
    </update>
    
    <select id="allMembers" resultType="int">
    	select count(MEMBER_EMAIL) from BRAIN_MEMBER where MEMBER_CATEGORY ='NORMAL'
    </select>
    
    <select id="allBlockMembers" resultType="int">
    	select count(MEMBER_EMAIL) from BRAIN_MEMBER where MEMBER_CATEGORY ='BLACK'
    </select>
    <!-- 여기까지 -->
</mapper> 		
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















