<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	
	<!-- 3.memberVO resultMap -->
	<resultMap type="memberVO" id="memberResultMap">
		<result property="memberEmail" column="MEMBER_EMAIL" />
		<result property="memberNickName" column="MEMBER_NICKNAME" />
		<result property="memberPassword" column="MEMBER_PASSWORD" />
		<result property="memberJoinDate" column="MEMBER_JOIN_DATE" />
		<result property="memberPoint" column="MEMBER_POINT" />
		<result property="memberNotifiedAmount" column="MEMBER_NOTIFIED_AMOUNT" />
		<result property="memberCategory" column="MEMBER_CATEGORY"/>
		<collection property="pickedVOList" column="MEMBER_EMAIL"
			ofType="pickedVO" javaType="ArrayList" resultMap ="pickedResultMap"/>
	</resultMap>
	
	<!-- pickedVO resultMap -->
	<resultMap type="pickedVO" id="pickedResultMap">
		<result property="memberEmail" column="MEMBER_EMAIL"/>
		<result property="mainArticleNo" column="MAIN_ARTICLE_NO"/>
	</resultMap>
   
	<!-- 한솔 회원가입 -->
	<insert id="memberRegister" parameterType="memberVO">
		insert into
		brain_member(MEMBER_EMAIL,MEMBER_NICKNAME,MEMBER_PASSWORD,MEMBER_JOIN_DATE,MEMBER_CATEGORY)
		values(#{memberEmail},#{memberNickName},#{memberPassword},sysdate,'일반회원')
	</insert>
	
	<!-- 재영 로그인 -->
	<!-- 제성 : 찜목록 담는거로 수정 -->
	<select id="memberLogin" resultMap="memberResultMap" parameterType="memberVO">
		select bm.MEMBER_EMAIL, bm.member_Category,bm.MEMBER_NICKNAME, pa.MAIN_ARTICLE_NO, bm.MEMBER_POINT
		from BRAIN_MEMBER bm, picked_article pa	
		where bm.MEMBER_EMAIL=pa.MEMBER_EMAIL and 
		bm.MEMBER_EMAIL=#{memberEmail} and bm.MEMBER_PASSWORD=#{memberPassword}
	</select>
	<select id="defaultMemberLogin" resultMap="memberResultMap" parameterType="memberVO">
		select MEMBER_EMAIL, MEMBER_NICKNAME, MEMBER_POINT from BRAIN_MEMBER where MEMBER_EMAIL=#{memberEmail} and MEMBER_PASSWORD=#{memberPassword}
	</select>

	<!-- 한솔 닉네임 중복체크 -->
	 <select id="findMemberByNickName" resultMap="memberResultMap" parameterType="string">
	 	select MEMBER_NICKNAME from brain_member where MEMBER_NICKNAME=#{value}
	 </select>
	 <!-- 한솔 이메일 중복체크 -->
	 <select id="findMemberByEmail" resultMap="memberResultMap" parameterType="string">
	 	select MEMBER_EMAIL from brain_member where MEMBER_EMAIL=#{value}
	 </select>
	 <!-- 일반회원 목록 -->
    <select id="RegisterMemberList" resultMap="memberResultMap" resultType="memberVO">
    select *
    from brain_member
    where MEMBER_CATEGORY ='일반회원'
    order by MEMBER_JOIN_DATE desc 
    </select>
    <!-- 불량회원 목록 -->
    <select id="blockMemberList" resultMap="memberResultMap" resultType="memberVO">
    select *
    from brain_member
    where MEMBER_CATEGORY ='불량회원'
    order by MEMBER_JOIN_DATE desc 
    </select>
    <update id="memberBlock" parameterType="string">
    	update brain_member set MEMBER_CATEGORY='불량회원' where MEMBER_EMAIL=#{value}
    </update>
        <update id="memberBlockRelease" parameterType="string">
    	update brain_member set MEMBER_CATEGORY='일반회원' where MEMBER_EMAIL=#{value}
    </update>
    
    	<!-- 찜여부 확인 -->
	<select id="selectPickedVO" resultMap ="pickedResultMap">
		select MEMBER_EMAIL,MAIN_ARTICLE_NO from PICKED_ARTICLE 
		where MEMBER_EMAIL = #{memberEmail} and MAIN_ARTICLE_NO=#{mainArticleNo}
	</select>
	<!-- 찜추가 -->
	<insert id="insertPickedVO" parameterType="pickedVO">
		insert into picked_article(MEMBER_EMAIL,MAIN_ARTICLE_NO) values(#{memberEmail},#{mainArticleNo})
	</insert>
	<!-- 찜 삭제 -->
	<delete id="deletePickedVO" parameterType="pickedVO">
		delete picked_article where MEMBER_EMAIL = #{memberEmail} and MAIN_ARTICLE_NO = #{mainArticleNo}
	</delete>
	<!-- session에 있는 login정보에 pickedVO를 update 해주기 위해 조회 -->
	<select id="getPickListByMemberEmail" resultMap="pickedResultMap">
		select MEMBER_EMAIL,MAIN_ARTICLE_NO from PICKED_ARTICLE 
		where MEMBER_EMAIL = #{memberEmail}
	</select>
    
    
    
    
</mapper> 		
 
 
 
 
 
 
 
 
 
 
 
 
 
 
 
















